2025-04-18T14:54:12.139 - CREATE TABLE Student (STUDENT_ID INT PRIMARY KEY, NAME VARCHAR(100), AGE INT, DEPARTMENT VARCHAR(100), GPA DOUBLE);
2025-04-18T16:27:04.643 - INSERT INTO Student (student_id, name, age, department, gpa) VALUES (?, ?, ?, ?, ?), (?, ?, ?, ?, ?)
2025-04-19T15:55:23.973 - INSERT INTO Student VALUES (?, ?, ?, ?, ?), (?, ?, ?, ?, ?), (?, ?, ?, ?, ?), (?, ?, ?, ?, ?)
2025-04-19T19:09:22.165 - SELECT * FROM Student WHERE age > 18
2025-04-19T19:11:16.232 - SELECT * FROM Student WHERE age > 18 AND department = 'CSE'
2025-04-19T19:13:28.514 - DELETE FROM Student WHERE student_id = 2
2025-04-19T20:43:37.792 - UPDATE Student SET age = 25 WHERE student_id = 1
2025-04-19T20:44:46.058 - SELECT * FROM Student ORDER BY age
2025-04-19T20:46:44.583 - SELECT * FROM Student ORDER BY age DESC
2025-04-19T20:47:26.474 - SELECT * FROM Student LIMIT 2
2025-04-20T16:58:08.494 - ALTER TABLE Student ADD marks INT, ADD grade VARCHAR(2) NOT NULL, ADD status VARCHAR(20) DEFAULT 'active';
2025-04-20T17:53:05.520 - UPDATE Student SET marks = 99, grade = 'A' WHERE student_id = 1
2025-04-20T17:55:57.908 - UPDATE Student SET marks = 82, grade = 'B' WHERE student_id = 3
2025-04-20T17:56:17.512 - UPDATE Student SET marks = 93, grade = 'A' WHERE student_id = 4
2025-04-20T17:56:45.427 - UPDATE Student SET marks = 70, grade = 'C' WHERE student_id = 4
2025-04-20T17:57:08.631 - UPDATE Student SET marks = 92, grade = 'A' WHERE student_id = 5
2025-04-20T17:57:27.646 - UPDATE Student SET marks = 82, grade = 'B' WHERE student_id = 6
2025-04-20T17:58:14.813 - UPDATE Student SET marks = 72, grade = 'C' WHERE student_id = 5
2025-04-20T21:55:23.597 - INSERT INTO Student (student_id, name, age, department, gpa, marks, grade) VALUES (?, ?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?, ?)
2025-04-20T22:03:20.257 - SELECT department, COUNT(*) FROM Student GROUP BY department
2025-04-20T22:04:40.010 - SELECT department, COUNT(*) FROM Student GROUP BY department HAVING COUNT(*) < 2
2025-04-20T22:06:01.841 - SELECT department, COUNT(*), AVG(marks) FROM Student GROUP BY department HAVING COUNT(*) < 2 AND AVG(marks) > 80
2025-04-20T22:07:28.778 - SELECT department, COUNT(*), AVG(marks) FROM Student GROUP BY department HAVING COUNT(*) < 2 OR AVG(marks) > 80
2025-04-20T22:07:37.603 - SELECT department, COUNT(*), AVG(marks) FROM Student GROUP BY department HAVING COUNT(*) < 2 OR AVG(marks) > 80
2025-04-20T22:10:28.721 - SELECT COUNT(*), AVG(marks), MAX(marks), MIN(marks) FROM Student
2025-04-20T22:15:20.774 - SELECT MAX(marks), MIN(marks) FROM Student
2025-04-20T23:27:26.424 - SELECT MAX(marks), MIN(marks) FROM Student
2025-04-21T00:02:33.977 - SELECT e.name AS employee, m.name AS manager FROM employees e INNER JOIN managers m ON e.manager_id = m.id
2025-04-21T00:03:23.061 - SELECT e.name AS employee, e.manager_id, d.dept_name FROM employees e INNER JOIN departments d ON e.dept_id = d.id
2025-04-21T00:04:00.641 - SELECT e.name AS employee, d.dept_name FROM employees e INNER JOIN departments d ON e.dept_id = d.id
2025-04-21T00:07:15.767 - SELECT e.name AS employee, d.dept_name FROM employees e LEFT JOIN departments d ON e.dept_id = d.id
2025-04-21T00:07:25.545 - SELECT e.name AS employee, d.dept_name FROM employees e RIGHT JOIN departments d ON e.dept_id = d.id
2025-04-21T00:09:06.236 - SELECT d.dept_name, e.name AS employee FROM employees e RIGHT JOIN departments d ON e.dept_id = d.id
2025-04-21T11:02:02.513 - SELECT d.dept_name, e.name AS employee FROM employees e RIGHT JOIN departments d ON e.dept_id = d.id
2025-04-21T11:02:02.543 - SELECT d.dept_name, e.name AS employee FROM employees e LEFT JOIN departments d ON e.dept_id = d.id
2025-04-21T11:03:37.775 - SELECT d.dept_name, e.name AS employee FROM employees e RIGHT JOIN departments d ON e.dept_id = d.id
2025-04-21T11:03:37.802 - SELECT d.dept_name, e.name AS employee FROM employees e LEFT JOIN departments d ON e.dept_id = d.id
2025-04-21T11:51:29.568 - CREATE TABLE IF NOT EXISTS Customers (customer_id INT NOT NULL AUTO_INCREMENT, name VARCHAR(100) NOT NULL, email VARCHAR(100), PRIMARY KEY (customer_id));
2025-04-21T11:51:55.172 - CREATE TABLE Orders (order_id INT NOT NULL AUTO_INCREMENT, customer_id INT NOT NULL, order_date DATE NOT NULL, PRIMARY KEY (order_id), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));
2025-04-21T11:57:36.168 - SELECT * FROM Student
2025-04-21T12:29:43.940 - SELECT * FROM Student
2025-04-21T12:31:25.125 - SELECT * FROM Student WHERE age > 18
2025-04-21T12:31:43.291 - SELECT * FROM Student WHERE age > 24
2025-04-21T12:31:50.292 - SELECT * FROM Student WHERE age > 29
2025-04-21T12:32:02.450 - SELECT * FROM Student WHERE age > 21
2025-04-21T12:37:17.888 - SELECT * FROM Student WHERE age > 21
2025-04-21T12:54:59.765 - SELECT * FROM Student WHERE age > 21
2025-04-21T12:55:30.437 - SELECT * FROM Student WHERE age > 21
2025-04-21T12:56:16.470 - SELECT * FROM Student WHERE age > 21 AND department = 'CSE'
2025-04-21T12:57:16.395 - SELECT * FROM Student WHERE age > 21 AND department = 'CSE'
2025-04-21T14:51:41.380 - SELECT name FROM employees  UNION SELECT name FROM managers
2025-04-21T14:52:09.626 - SELECT name FROM employees  UNION ALL SELECT name FROM managers
2025-04-21T14:52:23.428 - SELECT DISTINCT name FROM employees
2025-04-21T14:55:18.478 - SELECT name FROM Student
2025-04-21T17:35:17.976 - SELECT * FROM Student WHERE marks >  (SELECT AVG(marks) FROM Student)
2025-04-21T17:41:23.787 - SELECT *, avg_marks FROM (SELECT AVG(marks) AS avg_marks FROM Student) AS stats
2025-04-21T17:43:05.146 - SELECT * FROM Student WHERE marks >  (SELECT AVG(marks) FROM Student)
2025-04-22T10:48:52.654 - SELECT *, name FROM Student WHERE department IN (SELECT dept_name FROM departments)
2025-04-22T10:50:07.813 - SELECT name FROM Student WHERE department IN (SELECT dept_name FROM departments)
2025-04-22T10:50:08.383 - SELECT name FROM Student WHERE department IN (SELECT dept_name FROM departments)
2025-04-22T10:52:20.502 - SELECT name FROM employees WHERE manager_id IN (SELECT id FROM managers)
2025-04-22T10:57:18.277 - SELECT (SELECT id FROM departments d WHERE d.dept_name = Student.department) AS department_id FROM Student
2025-04-22T11:14:04.038 - SELECT name FROM Student WHERE NOT EXISTS (SELECT 1 FROM employees e INNER JOIN departments d ON e.dept_id = d.id WHERE d.dept_name = Student.department)
2025-04-22T11:17:55.282 - SELECT * FROM Student WHERE marks > (SELECT AVG(marks) FROM Student)
2025-04-29T10:21:57.515 - SELECT * FROM Student WHERE marks > (SELECT AVG(marks) FROM Student)
2025-05-06T12:32:38.857 - INSERT INTO Student (STUDENT_ID, NAME, AGE, grade) VALUES (?, ?, ?, ?), (?, ?, ?, ?)
2025-05-12T08:59:09.846 - INSERT INTO Student (STUDENT_ID, NAME, AGE, grade) VALUES (?, ?, ?, ?), (?, ?, ?, ?)
2025-05-12T09:02:38.302 - UPDATE Student SET grade = 'A+' WHERE STUDENT_ID = 211
2025-05-12T09:09:49.994 - UPDATE Student SET grade = 'A' WHERE STUDENT_ID = 211
2025-05-12T09:21:42.061 - SELECT * FROM Student
2025-05-12T09:24:46.644 - SELECT * FROM Student WHERE grade = ?
2025-05-12T15:32:09.272 - UPDATE Student SET age = ? WHERE age = ? AND department = ?
